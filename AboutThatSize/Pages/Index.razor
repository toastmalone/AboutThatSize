@page "/"

<div class="row">
    <h1 class="display-1">About that size...</h1>
</div>
<div class="row">
    <div class="col-5 float-right">
        <div class="row justify-content-end">
            <input @bind-value="NormalSize" @bind-value:event="oninput" class="form-control customTextInput" />
        </div>
        <div class="row justify-content-end">
            <select @bind="SizeInputUnit" class="custom-select customSelectInput">
                @foreach (var item in SizeInputs)
                {
                    <option value="@item">@item</option>
                }
            </select>
        </div>
    </div>
    <div class="col-auto">
        <h4>is about...</h4>
    </div>
    <div class="col-5">
        <div class="row justify-content-start">
            <input @bind-value="InsaneSize" @bind-value:event="oninput" class="form-control customTextInput"/>
        </div>
        <div class="row justify-content-start">
            <select @bind="SizeOutputUnit" class="custom-select customSelectInput">
                @foreach (var item in SizeOutputs)
                {
                    <option value="@item.Mass">@item.Name</option>
                }
            </select>
        </div>
    </div>
</div>

@code
{
    @using AboutThatSize.Models;

        private int normalSize;
        private int NormalSize
        {
            get => normalSize;
            set
            {
                normalSize = value;
                PerformNormalToInsaneUnitConversion();
            }
        }
        private int insaneSize;
        private int InsaneSize
        {
            get => insaneSize;
            set
            {
                insaneSize = value;
                PerformInsaneToNormalUnitConversion();
            }
        }
        private string SizeInputUnit { get; set; }
        private int SizeOutputUnit { get; set; }
        private List<string> SizeInputs { get; set; } = new List<string>() { "Lb", "Ft", "Kg", "Cm" };
        private List<Item> SizeOutputs { get; set; } = new List<Item>() { new Item() { Name = "Banana", Mass = 183 } };

        private void PerformNormalToInsaneUnitConversion()
        {
            insaneSize = (int)(NormalSize * SizeOutputUnit);
        }

        private void PerformInsaneToNormalUnitConversion()
        {
            normalSize = InsaneSize / 24;
        }
    }